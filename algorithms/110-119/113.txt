/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
 //使用dfs
func pathSum(root *TreeNode, sum int) (ans [][]int) {
    var path []int

    var dfs func(*TreeNode,int)
    dfs = func(node *TreeNode,leave int){
        path = append(path,node.Val)
        leave -= node.Val
        //defer func() { path = path[:len(path)-1] }()
        if node.Left == nil && node.Right == nil {
            if leave == 0 {
                ans = append(ans,append([]int(nil),path...))
            }
        }else{
            if node.Left != nil {
                dfs(node.Left,leave)
            }
            if node.Right != nil {
                dfs(node.Right,leave)
            }
        }
        path = path[:len(path)-1]

    }
    if root != nil {
        dfs(root,sum)
    }
    return ans
}