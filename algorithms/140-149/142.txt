/**
 * Definition for singly-linked list.
 * type ListNode struct {
 *     Val int
 *     Next *ListNode
 * }
 */
func detectCycle(head *ListNode) *ListNode {
    isTrue := false
    fast,slow := head,head
    for fast != nil && fast.Next != nil {
        fast = fast.Next.Next
        slow = slow.Next
        if fast == slow {
            isTrue = true
            break
        }
    }
    if isTrue {
        fast = head
        for fast != slow {
            fast = fast.Next
            slow = slow.Next
        }
        return slow
    }
    return nil
}