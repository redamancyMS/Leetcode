/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func pathSum(root *TreeNode, target int) [][]int {
    var ans [][]int
    if root == nil {
        return ans
    }
    var path []int
    var dfs func(node *TreeNode,tar int) 
    dfs = func(node *TreeNode,tar int){
        if node == nil {
            return
        }
        path = append(path,node.Val)
        tar = tar-node.Val
        if node.Left == nil && node.Right == nil && tar == 0  {
            ans = append(ans,append([]int(nil),path...))
        }
        dfs(node.Left,tar)
        dfs(node.Right,tar)
        path = path[:len(path)-1]
    }
    dfs(root,target)
    return ans
}