/**
 * Definition for a binary tree node.
 * type TreeNode struct {
 *     Val int
 *     Left *TreeNode
 *     Right *TreeNode
 * }
 */
func levelOrder(root *TreeNode) [][]int {
    var ans [][]int
    if root == nil {
        return ans
    }
    var queue []*TreeNode
    queue = append(queue,root)
    for len(queue) > 0 {
        var qq []*TreeNode
        temp := make([]int,len(queue))
        for i := 0 ; i < len(queue) ; i++ {
            root = queue[i]
            temp[i] = root.Val
            if root.Left != nil {
                qq = append(qq,root.Left)
            }
            if root.Right != nil {
                qq = append(qq,root.Right)
            }
        }
        queue = qq
        ans = append(ans,temp)
    }
    return ans
}